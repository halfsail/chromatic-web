{
  "version": 3,
  "sources": ["../../svelte-sound/dist/svelte-sound.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass Sound {\n  /**\n   * Creates a new SyntheticSound instance.\n   * @param options The options for the sound.\n   */\n  constructor(src, options = {}) {\n    __publicField(this, \"src\");\n    __publicField(this, \"options\");\n    __publicField(this, \"howl\");\n    this.src = src;\n    this.options = options;\n    this.create();\n  }\n  /**\n   * Creates the Howl instance for the sound.\n   */\n  async create() {\n    const { Howl } = await import(\"./howler.core-e669a980.js\").then((n) => n.h);\n    const { loop, volume } = this.options;\n    const sound2 = new Howl({\n      src: this.src,\n      loop: loop || false,\n      volume: volume || 1,\n      ...this.options\n    });\n    this.howl = sound2;\n  }\n  /**\n   * Updates the options for the sound.\n   * @param options The new options for the sound.\n   */\n  update(options = this.options) {\n    this.unload();\n    this.options = options;\n    this.create();\n  }\n  /**\n   * Destroys the sound instance.\n   */\n  destroy() {\n    this.stop();\n    this.unload();\n  }\n  /**\n   * Plays the sound.\n   */\n  play() {\n    this.howl.play();\n  }\n  /**\n   * Stops the sound.\n   */\n  stop() {\n    this.howl.stop();\n  }\n  /**\n   * Unloads the sound.\n   */\n  unload() {\n    this.howl.unload();\n  }\n}\nclass SvelteSound extends Sound {\n  /**\n   * Creates a new Sound instance.\n   * @param node The HTML element to attach the sound player to.\n   * @param options The options to configure the sound player.\n   */\n  constructor(node, { src, events, ...options }) {\n    super(src, options);\n    __publicField(this, \"node\");\n    __publicField(this, \"events\");\n    this.node = node;\n    this.events = events;\n    this.attachControls();\n  }\n  /**\n   * Adds event listeners to the HTML element to play and stop the sound.\n   */\n  attachControls() {\n    const [playEvent, stopEvent] = this.events;\n    this.node.play = this.play.bind(this);\n    this.node.stop = this.stop.bind(this);\n    this.node.addEventListener(playEvent, this.play.bind(this));\n    this.node.addEventListener(stopEvent, this.stop.bind(this));\n  }\n  /**\n   * Removes event listeners from the HTML element to play and stop the sound.\n   */\n  removeEventListeners() {\n    const [playEvent, stopEvent] = this.events;\n    this.node.removeEventListener(playEvent, this.play.bind(this));\n    this.node.removeEventListener(stopEvent, this.stop.bind(this));\n  }\n  /**\n   * Updates the sound player with new options.\n   * @param options The new options to configure the sound player.\n   */\n  update(options) {\n    this.removeEventListeners();\n    super.update(options);\n    this.attachControls();\n  }\n  /**\n   * Destroys the sound player and removes all event listeners.\n   */\n  destroy() {\n    this.removeEventListeners();\n    super.destroy();\n  }\n}\nfunction sound(node, options) {\n  return new SvelteSound(node, options);\n}\nfunction useSound(src, events, options) {\n  return (node, overrideOptions) => new SvelteSound(node, { src, events, ...options, ...overrideOptions });\n}\nexport {\n  Sound,\n  sound,\n  useSound\n};\n"],
  "mappings": "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",
  "names": []
}
