{
  "version": 3,
  "sources": ["../../svelte-sound/dist/howler.core-e669a980.js"],
  "sourcesContent": ["function _mergeNamespaces(n, m) {\n  for (var i = 0; i < m.length; i++) {\n    const e = m[i];\n    if (typeof e !== \"string\" && !Array.isArray(e)) {\n      for (const k in e) {\n        if (k !== \"default\" && !(k in n)) {\n          const d = Object.getOwnPropertyDescriptor(e, k);\n          if (d) {\n            Object.defineProperty(n, k, d.get ? d : {\n              enumerable: true,\n              get: () => e[k]\n            });\n          }\n        }\n      }\n    }\n  }\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\nvar commonjsGlobal = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nvar howler_core$1 = {};\n/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n(function(exports) {\n  (function() {\n    var HowlerGlobal = function() {\n      this.init();\n    };\n    HowlerGlobal.prototype = {\n      /**\n       * Initialize the global Howler object.\n       * @return {Howler}\n       */\n      init: function() {\n        var self2 = this || Howler;\n        self2._counter = 1e3;\n        self2._html5AudioPool = [];\n        self2.html5PoolSize = 10;\n        self2._codecs = {};\n        self2._howls = [];\n        self2._muted = false;\n        self2._volume = 1;\n        self2._canPlayEvent = \"canplaythrough\";\n        self2._navigator = typeof window !== \"undefined\" && window.navigator ? window.navigator : null;\n        self2.masterGain = null;\n        self2.noAudio = false;\n        self2.usingWebAudio = true;\n        self2.autoSuspend = true;\n        self2.ctx = null;\n        self2.autoUnlock = true;\n        self2._setup();\n        return self2;\n      },\n      /**\n       * Get/set the global volume for all sounds.\n       * @param  {Float} vol Volume from 0.0 to 1.0.\n       * @return {Howler/Float}     Returns self or current volume.\n       */\n      volume: function(vol) {\n        var self2 = this || Howler;\n        vol = parseFloat(vol);\n        if (!self2.ctx) {\n          setupAudioContext();\n        }\n        if (typeof vol !== \"undefined\" && vol >= 0 && vol <= 1) {\n          self2._volume = vol;\n          if (self2._muted) {\n            return self2;\n          }\n          if (self2.usingWebAudio) {\n            self2.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          }\n          for (var i = 0; i < self2._howls.length; i++) {\n            if (!self2._howls[i]._webAudio) {\n              var ids = self2._howls[i]._getSoundIds();\n              for (var j = 0; j < ids.length; j++) {\n                var sound = self2._howls[i]._soundById(ids[j]);\n                if (sound && sound._node) {\n                  sound._node.volume = sound._volume * vol;\n                }\n              }\n            }\n          }\n          return self2;\n        }\n        return self2._volume;\n      },\n      /**\n       * Handle muting and unmuting globally.\n       * @param  {Boolean} muted Is muted or not.\n       */\n      mute: function(muted) {\n        var self2 = this || Howler;\n        if (!self2.ctx) {\n          setupAudioContext();\n        }\n        self2._muted = muted;\n        if (self2.usingWebAudio) {\n          self2.masterGain.gain.setValueAtTime(muted ? 0 : self2._volume, Howler.ctx.currentTime);\n        }\n        for (var i = 0; i < self2._howls.length; i++) {\n          if (!self2._howls[i]._webAudio) {\n            var ids = self2._howls[i]._getSoundIds();\n            for (var j = 0; j < ids.length; j++) {\n              var sound = self2._howls[i]._soundById(ids[j]);\n              if (sound && sound._node) {\n                sound._node.muted = muted ? true : sound._muted;\n              }\n            }\n          }\n        }\n        return self2;\n      },\n      /**\n       * Handle stopping all sounds globally.\n       */\n      stop: function() {\n        var self2 = this || Howler;\n        for (var i = 0; i < self2._howls.length; i++) {\n          self2._howls[i].stop();\n        }\n        return self2;\n      },\n      /**\n       * Unload and destroy all currently loaded Howl objects.\n       * @return {Howler}\n       */\n      unload: function() {\n        var self2 = this || Howler;\n        for (var i = self2._howls.length - 1; i >= 0; i--) {\n          self2._howls[i].unload();\n        }\n        if (self2.usingWebAudio && self2.ctx && typeof self2.ctx.close !== \"undefined\") {\n          self2.ctx.close();\n          self2.ctx = null;\n          setupAudioContext();\n        }\n        return self2;\n      },\n      /**\n       * Check for codec support of specific extension.\n       * @param  {String} ext Audio file extention.\n       * @return {Boolean}\n       */\n      codecs: function(ext) {\n        return (this || Howler)._codecs[ext.replace(/^x-/, \"\")];\n      },\n      /**\n       * Setup various state values for global tracking.\n       * @return {Howler}\n       */\n      _setup: function() {\n        var self2 = this || Howler;\n        self2.state = self2.ctx ? self2.ctx.state || \"suspended\" : \"suspended\";\n        self2._autoSuspend();\n        if (!self2.usingWebAudio) {\n          if (typeof Audio !== \"undefined\") {\n            try {\n              var test = new Audio();\n              if (typeof test.oncanplaythrough === \"undefined\") {\n                self2._canPlayEvent = \"canplay\";\n              }\n            } catch (e) {\n              self2.noAudio = true;\n            }\n          } else {\n            self2.noAudio = true;\n          }\n        }\n        try {\n          var test = new Audio();\n          if (test.muted) {\n            self2.noAudio = true;\n          }\n        } catch (e) {\n        }\n        if (!self2.noAudio) {\n          self2._setupCodecs();\n        }\n        return self2;\n      },\n      /**\n       * Check for browser support for various codecs and cache the results.\n       * @return {Howler}\n       */\n      _setupCodecs: function() {\n        var self2 = this || Howler;\n        var audioTest = null;\n        try {\n          audioTest = typeof Audio !== \"undefined\" ? new Audio() : null;\n        } catch (err) {\n          return self2;\n        }\n        if (!audioTest || typeof audioTest.canPlayType !== \"function\") {\n          return self2;\n        }\n        var mpegTest = audioTest.canPlayType(\"audio/mpeg;\").replace(/^no$/, \"\");\n        var ua = self2._navigator ? self2._navigator.userAgent : \"\";\n        var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n        var isOldOpera = checkOpera && parseInt(checkOpera[0].split(\"/\")[1], 10) < 33;\n        var checkSafari = ua.indexOf(\"Safari\") !== -1 && ua.indexOf(\"Chrome\") === -1;\n        var safariVersion = ua.match(/Version\\/(.*?) /);\n        var isOldSafari = checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15;\n        self2._codecs = {\n          mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType(\"audio/mp3;\").replace(/^no$/, \"\"))),\n          mpeg: !!mpegTest,\n          opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, \"\"),\n          ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, \"\"),\n          oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, \"\"),\n          wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType(\"audio/wav\")).replace(/^no$/, \"\"),\n          aac: !!audioTest.canPlayType(\"audio/aac;\").replace(/^no$/, \"\"),\n          caf: !!audioTest.canPlayType(\"audio/x-caf;\").replace(/^no$/, \"\"),\n          m4a: !!(audioTest.canPlayType(\"audio/x-m4a;\") || audioTest.canPlayType(\"audio/m4a;\") || audioTest.canPlayType(\"audio/aac;\")).replace(/^no$/, \"\"),\n          m4b: !!(audioTest.canPlayType(\"audio/x-m4b;\") || audioTest.canPlayType(\"audio/m4b;\") || audioTest.canPlayType(\"audio/aac;\")).replace(/^no$/, \"\"),\n          mp4: !!(audioTest.canPlayType(\"audio/x-mp4;\") || audioTest.canPlayType(\"audio/mp4;\") || audioTest.canPlayType(\"audio/aac;\")).replace(/^no$/, \"\"),\n          weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, \"\")),\n          webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, \"\")),\n          dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, \"\"),\n          flac: !!(audioTest.canPlayType(\"audio/x-flac;\") || audioTest.canPlayType(\"audio/flac;\")).replace(/^no$/, \"\")\n        };\n        return self2;\n      },\n      /**\n       * Some browsers/devices will only allow audio to be played after a user interaction.\n       * Attempt to automatically unlock audio on the first user interaction.\n       * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n       * @return {Howler}\n       */\n      _unlockAudio: function() {\n        var self2 = this || Howler;\n        if (self2._audioUnlocked || !self2.ctx) {\n          return;\n        }\n        self2._audioUnlocked = false;\n        self2.autoUnlock = false;\n        if (!self2._mobileUnloaded && self2.ctx.sampleRate !== 44100) {\n          self2._mobileUnloaded = true;\n          self2.unload();\n        }\n        self2._scratchBuffer = self2.ctx.createBuffer(1, 1, 22050);\n        var unlock = function(e) {\n          while (self2._html5AudioPool.length < self2.html5PoolSize) {\n            try {\n              var audioNode = new Audio();\n              audioNode._unlocked = true;\n              self2._releaseHtml5Audio(audioNode);\n            } catch (e2) {\n              self2.noAudio = true;\n              break;\n            }\n          }\n          for (var i = 0; i < self2._howls.length; i++) {\n            if (!self2._howls[i]._webAudio) {\n              var ids = self2._howls[i]._getSoundIds();\n              for (var j = 0; j < ids.length; j++) {\n                var sound = self2._howls[i]._soundById(ids[j]);\n                if (sound && sound._node && !sound._node._unlocked) {\n                  sound._node._unlocked = true;\n                  sound._node.load();\n                }\n              }\n            }\n          }\n          self2._autoResume();\n          var source = self2.ctx.createBufferSource();\n          source.buffer = self2._scratchBuffer;\n          source.connect(self2.ctx.destination);\n          if (typeof source.start === \"undefined\") {\n            source.noteOn(0);\n          } else {\n            source.start(0);\n          }\n          if (typeof self2.ctx.resume === \"function\") {\n            self2.ctx.resume();\n          }\n          source.onended = function() {\n            source.disconnect(0);\n            self2._audioUnlocked = true;\n            document.removeEventListener(\"touchstart\", unlock, true);\n            document.removeEventListener(\"touchend\", unlock, true);\n            document.removeEventListener(\"click\", unlock, true);\n            document.removeEventListener(\"keydown\", unlock, true);\n            for (var i2 = 0; i2 < self2._howls.length; i2++) {\n              self2._howls[i2]._emit(\"unlock\");\n            }\n          };\n        };\n        document.addEventListener(\"touchstart\", unlock, true);\n        document.addEventListener(\"touchend\", unlock, true);\n        document.addEventListener(\"click\", unlock, true);\n        document.addEventListener(\"keydown\", unlock, true);\n        return self2;\n      },\n      /**\n       * Get an unlocked HTML5 Audio object from the pool. If none are left,\n       * return a new Audio object and throw a warning.\n       * @return {Audio} HTML5 Audio object.\n       */\n      _obtainHtml5Audio: function() {\n        var self2 = this || Howler;\n        if (self2._html5AudioPool.length) {\n          return self2._html5AudioPool.pop();\n        }\n        var testPlay = new Audio().play();\n        if (testPlay && typeof Promise !== \"undefined\" && (testPlay instanceof Promise || typeof testPlay.then === \"function\")) {\n          testPlay.catch(function() {\n            console.warn(\"HTML5 Audio pool exhausted, returning potentially locked audio object.\");\n          });\n        }\n        return new Audio();\n      },\n      /**\n       * Return an activated HTML5 Audio object to the pool.\n       * @return {Howler}\n       */\n      _releaseHtml5Audio: function(audio) {\n        var self2 = this || Howler;\n        if (audio._unlocked) {\n          self2._html5AudioPool.push(audio);\n        }\n        return self2;\n      },\n      /**\n       * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n       * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n       * @return {Howler}\n       */\n      _autoSuspend: function() {\n        var self2 = this;\n        if (!self2.autoSuspend || !self2.ctx || typeof self2.ctx.suspend === \"undefined\" || !Howler.usingWebAudio) {\n          return;\n        }\n        for (var i = 0; i < self2._howls.length; i++) {\n          if (self2._howls[i]._webAudio) {\n            for (var j = 0; j < self2._howls[i]._sounds.length; j++) {\n              if (!self2._howls[i]._sounds[j]._paused) {\n                return self2;\n              }\n            }\n          }\n        }\n        if (self2._suspendTimer) {\n          clearTimeout(self2._suspendTimer);\n        }\n        self2._suspendTimer = setTimeout(function() {\n          if (!self2.autoSuspend) {\n            return;\n          }\n          self2._suspendTimer = null;\n          self2.state = \"suspending\";\n          var handleSuspension = function() {\n            self2.state = \"suspended\";\n            if (self2._resumeAfterSuspend) {\n              delete self2._resumeAfterSuspend;\n              self2._autoResume();\n            }\n          };\n          self2.ctx.suspend().then(handleSuspension, handleSuspension);\n        }, 3e4);\n        return self2;\n      },\n      /**\n       * Automatically resume the Web Audio AudioContext when a new sound is played.\n       * @return {Howler}\n       */\n      _autoResume: function() {\n        var self2 = this;\n        if (!self2.ctx || typeof self2.ctx.resume === \"undefined\" || !Howler.usingWebAudio) {\n          return;\n        }\n        if (self2.state === \"running\" && self2.ctx.state !== \"interrupted\" && self2._suspendTimer) {\n          clearTimeout(self2._suspendTimer);\n          self2._suspendTimer = null;\n        } else if (self2.state === \"suspended\" || self2.state === \"running\" && self2.ctx.state === \"interrupted\") {\n          self2.ctx.resume().then(function() {\n            self2.state = \"running\";\n            for (var i = 0; i < self2._howls.length; i++) {\n              self2._howls[i]._emit(\"resume\");\n            }\n          });\n          if (self2._suspendTimer) {\n            clearTimeout(self2._suspendTimer);\n            self2._suspendTimer = null;\n          }\n        } else if (self2.state === \"suspending\") {\n          self2._resumeAfterSuspend = true;\n        }\n        return self2;\n      }\n    };\n    var Howler = new HowlerGlobal();\n    var Howl = function(o) {\n      var self2 = this;\n      if (!o.src || o.src.length === 0) {\n        console.error(\"An array of source files must be passed with any new Howl.\");\n        return;\n      }\n      self2.init(o);\n    };\n    Howl.prototype = {\n      /**\n       * Initialize a new Howl group object.\n       * @param  {Object} o Passed in properties for this group.\n       * @return {Howl}\n       */\n      init: function(o) {\n        var self2 = this;\n        if (!Howler.ctx) {\n          setupAudioContext();\n        }\n        self2._autoplay = o.autoplay || false;\n        self2._format = typeof o.format !== \"string\" ? o.format : [o.format];\n        self2._html5 = o.html5 || false;\n        self2._muted = o.mute || false;\n        self2._loop = o.loop || false;\n        self2._pool = o.pool || 5;\n        self2._preload = typeof o.preload === \"boolean\" || o.preload === \"metadata\" ? o.preload : true;\n        self2._rate = o.rate || 1;\n        self2._sprite = o.sprite || {};\n        self2._src = typeof o.src !== \"string\" ? o.src : [o.src];\n        self2._volume = o.volume !== void 0 ? o.volume : 1;\n        self2._xhr = {\n          method: o.xhr && o.xhr.method ? o.xhr.method : \"GET\",\n          headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n          withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false\n        };\n        self2._duration = 0;\n        self2._state = \"unloaded\";\n        self2._sounds = [];\n        self2._endTimers = {};\n        self2._queue = [];\n        self2._playLock = false;\n        self2._onend = o.onend ? [{ fn: o.onend }] : [];\n        self2._onfade = o.onfade ? [{ fn: o.onfade }] : [];\n        self2._onload = o.onload ? [{ fn: o.onload }] : [];\n        self2._onloaderror = o.onloaderror ? [{ fn: o.onloaderror }] : [];\n        self2._onplayerror = o.onplayerror ? [{ fn: o.onplayerror }] : [];\n        self2._onpause = o.onpause ? [{ fn: o.onpause }] : [];\n        self2._onplay = o.onplay ? [{ fn: o.onplay }] : [];\n        self2._onstop = o.onstop ? [{ fn: o.onstop }] : [];\n        self2._onmute = o.onmute ? [{ fn: o.onmute }] : [];\n        self2._onvolume = o.onvolume ? [{ fn: o.onvolume }] : [];\n        self2._onrate = o.onrate ? [{ fn: o.onrate }] : [];\n        self2._onseek = o.onseek ? [{ fn: o.onseek }] : [];\n        self2._onunlock = o.onunlock ? [{ fn: o.onunlock }] : [];\n        self2._onresume = [];\n        self2._webAudio = Howler.usingWebAudio && !self2._html5;\n        if (typeof Howler.ctx !== \"undefined\" && Howler.ctx && Howler.autoUnlock) {\n          Howler._unlockAudio();\n        }\n        Howler._howls.push(self2);\n        if (self2._autoplay) {\n          self2._queue.push({\n            event: \"play\",\n            action: function() {\n              self2.play();\n            }\n          });\n        }\n        if (self2._preload && self2._preload !== \"none\") {\n          self2.load();\n        }\n        return self2;\n      },\n      /**\n       * Load the audio file.\n       * @return {Howler}\n       */\n      load: function() {\n        var self2 = this;\n        var url = null;\n        if (Howler.noAudio) {\n          self2._emit(\"loaderror\", null, \"No audio support.\");\n          return;\n        }\n        if (typeof self2._src === \"string\") {\n          self2._src = [self2._src];\n        }\n        for (var i = 0; i < self2._src.length; i++) {\n          var ext, str;\n          if (self2._format && self2._format[i]) {\n            ext = self2._format[i];\n          } else {\n            str = self2._src[i];\n            if (typeof str !== \"string\") {\n              self2._emit(\"loaderror\", null, \"Non-string found in selected audio sources - ignoring.\");\n              continue;\n            }\n            ext = /^data:audio\\/([^;,]+);/i.exec(str);\n            if (!ext) {\n              ext = /\\.([^.]+)$/.exec(str.split(\"?\", 1)[0]);\n            }\n            if (ext) {\n              ext = ext[1].toLowerCase();\n            }\n          }\n          if (!ext) {\n            console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n          }\n          if (ext && Howler.codecs(ext)) {\n            url = self2._src[i];\n            break;\n          }\n        }\n        if (!url) {\n          self2._emit(\"loaderror\", null, \"No codec support for selected audio sources.\");\n          return;\n        }\n        self2._src = url;\n        self2._state = \"loading\";\n        if (window.location.protocol === \"https:\" && url.slice(0, 5) === \"http:\") {\n          self2._html5 = true;\n          self2._webAudio = false;\n        }\n        new Sound(self2);\n        if (self2._webAudio) {\n          loadBuffer(self2);\n        }\n        return self2;\n      },\n      /**\n       * Play a sound or resume previous playback.\n       * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n       * @param  {Boolean} internal Internal Use: true prevents event firing.\n       * @return {Number}          Sound ID.\n       */\n      play: function(sprite, internal) {\n        var self2 = this;\n        var id = null;\n        if (typeof sprite === \"number\") {\n          id = sprite;\n          sprite = null;\n        } else if (typeof sprite === \"string\" && self2._state === \"loaded\" && !self2._sprite[sprite]) {\n          return null;\n        } else if (typeof sprite === \"undefined\") {\n          sprite = \"__default\";\n          if (!self2._playLock) {\n            var num = 0;\n            for (var i = 0; i < self2._sounds.length; i++) {\n              if (self2._sounds[i]._paused && !self2._sounds[i]._ended) {\n                num++;\n                id = self2._sounds[i]._id;\n              }\n            }\n            if (num === 1) {\n              sprite = null;\n            } else {\n              id = null;\n            }\n          }\n        }\n        var sound = id ? self2._soundById(id) : self2._inactiveSound();\n        if (!sound) {\n          return null;\n        }\n        if (id && !sprite) {\n          sprite = sound._sprite || \"__default\";\n        }\n        if (self2._state !== \"loaded\") {\n          sound._sprite = sprite;\n          sound._ended = false;\n          var soundId = sound._id;\n          self2._queue.push({\n            event: \"play\",\n            action: function() {\n              self2.play(soundId);\n            }\n          });\n          return soundId;\n        }\n        if (id && !sound._paused) {\n          if (!internal) {\n            self2._loadQueue(\"play\");\n          }\n          return sound._id;\n        }\n        if (self2._webAudio) {\n          Howler._autoResume();\n        }\n        var seek = Math.max(0, sound._seek > 0 ? sound._seek : self2._sprite[sprite][0] / 1e3);\n        var duration = Math.max(0, (self2._sprite[sprite][0] + self2._sprite[sprite][1]) / 1e3 - seek);\n        var timeout = duration * 1e3 / Math.abs(sound._rate);\n        var start = self2._sprite[sprite][0] / 1e3;\n        var stop = (self2._sprite[sprite][0] + self2._sprite[sprite][1]) / 1e3;\n        sound._sprite = sprite;\n        sound._ended = false;\n        var setParams = function() {\n          sound._paused = false;\n          sound._seek = seek;\n          sound._start = start;\n          sound._stop = stop;\n          sound._loop = !!(sound._loop || self2._sprite[sprite][2]);\n        };\n        if (seek >= stop) {\n          self2._ended(sound);\n          return;\n        }\n        var node = sound._node;\n        if (self2._webAudio) {\n          var playWebAudio = function() {\n            self2._playLock = false;\n            setParams();\n            self2._refreshBuffer(sound);\n            var vol = sound._muted || self2._muted ? 0 : sound._volume;\n            node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            sound._playStart = Howler.ctx.currentTime;\n            if (typeof node.bufferSource.start === \"undefined\") {\n              sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n            } else {\n              sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n            }\n            if (timeout !== Infinity) {\n              self2._endTimers[sound._id] = setTimeout(self2._ended.bind(self2, sound), timeout);\n            }\n            if (!internal) {\n              setTimeout(function() {\n                self2._emit(\"play\", sound._id);\n                self2._loadQueue();\n              }, 0);\n            }\n          };\n          if (Howler.state === \"running\" && Howler.ctx.state !== \"interrupted\") {\n            playWebAudio();\n          } else {\n            self2._playLock = true;\n            self2.once(\"resume\", playWebAudio);\n            self2._clearTimer(sound._id);\n          }\n        } else {\n          var playHtml5 = function() {\n            node.currentTime = seek;\n            node.muted = sound._muted || self2._muted || Howler._muted || node.muted;\n            node.volume = sound._volume * Howler.volume();\n            node.playbackRate = sound._rate;\n            try {\n              var play = node.play();\n              if (play && typeof Promise !== \"undefined\" && (play instanceof Promise || typeof play.then === \"function\")) {\n                self2._playLock = true;\n                setParams();\n                play.then(function() {\n                  self2._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self2._emit(\"play\", sound._id);\n                  } else {\n                    self2._loadQueue();\n                  }\n                }).catch(function() {\n                  self2._playLock = false;\n                  self2._emit(\"playerror\", sound._id, \"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.\");\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n              } else if (!internal) {\n                self2._playLock = false;\n                setParams();\n                self2._emit(\"play\", sound._id);\n              }\n              node.playbackRate = sound._rate;\n              if (node.paused) {\n                self2._emit(\"playerror\", sound._id, \"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.\");\n                return;\n              }\n              if (sprite !== \"__default\" || sound._loop) {\n                self2._endTimers[sound._id] = setTimeout(self2._ended.bind(self2, sound), timeout);\n              } else {\n                self2._endTimers[sound._id] = function() {\n                  self2._ended(sound);\n                  node.removeEventListener(\"ended\", self2._endTimers[sound._id], false);\n                };\n                node.addEventListener(\"ended\", self2._endTimers[sound._id], false);\n              }\n            } catch (err) {\n              self2._emit(\"playerror\", sound._id, err);\n            }\n          };\n          if (node.src === \"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA\") {\n            node.src = self2._src;\n            node.load();\n          }\n          var loadedNoReadyState = window && window.ejecta || !node.readyState && Howler._navigator.isCocoonJS;\n          if (node.readyState >= 3 || loadedNoReadyState) {\n            playHtml5();\n          } else {\n            self2._playLock = true;\n            self2._state = \"loading\";\n            var listener = function() {\n              self2._state = \"loaded\";\n              playHtml5();\n              node.removeEventListener(Howler._canPlayEvent, listener, false);\n            };\n            node.addEventListener(Howler._canPlayEvent, listener, false);\n            self2._clearTimer(sound._id);\n          }\n        }\n        return sound._id;\n      },\n      /**\n       * Pause playback and save current position.\n       * @param  {Number} id The sound ID (empty to pause all in group).\n       * @return {Howl}\n       */\n      pause: function(id) {\n        var self2 = this;\n        if (self2._state !== \"loaded\" || self2._playLock) {\n          self2._queue.push({\n            event: \"pause\",\n            action: function() {\n              self2.pause(id);\n            }\n          });\n          return self2;\n        }\n        var ids = self2._getSoundIds(id);\n        for (var i = 0; i < ids.length; i++) {\n          self2._clearTimer(ids[i]);\n          var sound = self2._soundById(ids[i]);\n          if (sound && !sound._paused) {\n            sound._seek = self2.seek(ids[i]);\n            sound._rateSeek = 0;\n            sound._paused = true;\n            self2._stopFade(ids[i]);\n            if (sound._node) {\n              if (self2._webAudio) {\n                if (!sound._node.bufferSource) {\n                  continue;\n                }\n                if (typeof sound._node.bufferSource.stop === \"undefined\") {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n                self2._cleanBuffer(sound._node);\n              } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n                sound._node.pause();\n              }\n            }\n          }\n          if (!arguments[1]) {\n            self2._emit(\"pause\", sound ? sound._id : null);\n          }\n        }\n        return self2;\n      },\n      /**\n       * Stop playback and reset to start.\n       * @param  {Number} id The sound ID (empty to stop all in group).\n       * @param  {Boolean} internal Internal Use: true prevents event firing.\n       * @return {Howl}\n       */\n      stop: function(id, internal) {\n        var self2 = this;\n        if (self2._state !== \"loaded\" || self2._playLock) {\n          self2._queue.push({\n            event: \"stop\",\n            action: function() {\n              self2.stop(id);\n            }\n          });\n          return self2;\n        }\n        var ids = self2._getSoundIds(id);\n        for (var i = 0; i < ids.length; i++) {\n          self2._clearTimer(ids[i]);\n          var sound = self2._soundById(ids[i]);\n          if (sound) {\n            sound._seek = sound._start || 0;\n            sound._rateSeek = 0;\n            sound._paused = true;\n            sound._ended = true;\n            self2._stopFade(ids[i]);\n            if (sound._node) {\n              if (self2._webAudio) {\n                if (sound._node.bufferSource) {\n                  if (typeof sound._node.bufferSource.stop === \"undefined\") {\n                    sound._node.bufferSource.noteOff(0);\n                  } else {\n                    sound._node.bufferSource.stop(0);\n                  }\n                  self2._cleanBuffer(sound._node);\n                }\n              } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n                sound._node.currentTime = sound._start || 0;\n                sound._node.pause();\n                if (sound._node.duration === Infinity) {\n                  self2._clearSound(sound._node);\n                }\n              }\n            }\n            if (!internal) {\n              self2._emit(\"stop\", sound._id);\n            }\n          }\n        }\n        return self2;\n      },\n      /**\n       * Mute/unmute a single sound or all sounds in this Howl group.\n       * @param  {Boolean} muted Set to true to mute and false to unmute.\n       * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n       * @return {Howl}\n       */\n      mute: function(muted, id) {\n        var self2 = this;\n        if (self2._state !== \"loaded\" || self2._playLock) {\n          self2._queue.push({\n            event: \"mute\",\n            action: function() {\n              self2.mute(muted, id);\n            }\n          });\n          return self2;\n        }\n        if (typeof id === \"undefined\") {\n          if (typeof muted === \"boolean\") {\n            self2._muted = muted;\n          } else {\n            return self2._muted;\n          }\n        }\n        var ids = self2._getSoundIds(id);\n        for (var i = 0; i < ids.length; i++) {\n          var sound = self2._soundById(ids[i]);\n          if (sound) {\n            sound._muted = muted;\n            if (sound._interval) {\n              self2._stopFade(sound._id);\n            }\n            if (self2._webAudio && sound._node) {\n              sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.muted = Howler._muted ? true : muted;\n            }\n            self2._emit(\"mute\", sound._id);\n          }\n        }\n        return self2;\n      },\n      /**\n       * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n       *   volume() -> Returns the group's volume value.\n       *   volume(id) -> Returns the sound id's current volume.\n       *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n       *   volume(vol, id) -> Sets the volume of passed sound id.\n       * @return {Howl/Number} Returns self or current volume.\n       */\n      volume: function() {\n        var self2 = this;\n        var args = arguments;\n        var vol, id;\n        if (args.length === 0) {\n          return self2._volume;\n        } else if (args.length === 1 || args.length === 2 && typeof args[1] === \"undefined\") {\n          var ids = self2._getSoundIds();\n          var index = ids.indexOf(args[0]);\n          if (index >= 0) {\n            id = parseInt(args[0], 10);\n          } else {\n            vol = parseFloat(args[0]);\n          }\n        } else if (args.length >= 2) {\n          vol = parseFloat(args[0]);\n          id = parseInt(args[1], 10);\n        }\n        var sound;\n        if (typeof vol !== \"undefined\" && vol >= 0 && vol <= 1) {\n          if (self2._state !== \"loaded\" || self2._playLock) {\n            self2._queue.push({\n              event: \"volume\",\n              action: function() {\n                self2.volume.apply(self2, args);\n              }\n            });\n            return self2;\n          }\n          if (typeof id === \"undefined\") {\n            self2._volume = vol;\n          }\n          id = self2._getSoundIds(id);\n          for (var i = 0; i < id.length; i++) {\n            sound = self2._soundById(id[i]);\n            if (sound) {\n              sound._volume = vol;\n              if (!args[2]) {\n                self2._stopFade(id[i]);\n              }\n              if (self2._webAudio && sound._node && !sound._muted) {\n                sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n              } else if (sound._node && !sound._muted) {\n                sound._node.volume = vol * Howler.volume();\n              }\n              self2._emit(\"volume\", sound._id);\n            }\n          }\n        } else {\n          sound = id ? self2._soundById(id) : self2._sounds[0];\n          return sound ? sound._volume : 0;\n        }\n        return self2;\n      },\n      /**\n       * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n       * @param  {Number} from The value to fade from (0.0 to 1.0).\n       * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n       * @param  {Number} len  Time in milliseconds to fade.\n       * @param  {Number} id   The sound id (omit to fade all sounds).\n       * @return {Howl}\n       */\n      fade: function(from, to, len, id) {\n        var self2 = this;\n        if (self2._state !== \"loaded\" || self2._playLock) {\n          self2._queue.push({\n            event: \"fade\",\n            action: function() {\n              self2.fade(from, to, len, id);\n            }\n          });\n          return self2;\n        }\n        from = Math.min(Math.max(0, parseFloat(from)), 1);\n        to = Math.min(Math.max(0, parseFloat(to)), 1);\n        len = parseFloat(len);\n        self2.volume(from, id);\n        var ids = self2._getSoundIds(id);\n        for (var i = 0; i < ids.length; i++) {\n          var sound = self2._soundById(ids[i]);\n          if (sound) {\n            if (!id) {\n              self2._stopFade(ids[i]);\n            }\n            if (self2._webAudio && !sound._muted) {\n              var currentTime = Howler.ctx.currentTime;\n              var end = currentTime + len / 1e3;\n              sound._volume = from;\n              sound._node.gain.setValueAtTime(from, currentTime);\n              sound._node.gain.linearRampToValueAtTime(to, end);\n            }\n            self2._startFadeInterval(sound, from, to, len, ids[i], typeof id === \"undefined\");\n          }\n        }\n        return self2;\n      },\n      /**\n       * Starts the internal interval to fade a sound.\n       * @param  {Object} sound Reference to sound to fade.\n       * @param  {Number} from The value to fade from (0.0 to 1.0).\n       * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n       * @param  {Number} len  Time in milliseconds to fade.\n       * @param  {Number} id   The sound id to fade.\n       * @param  {Boolean} isGroup   If true, set the volume on the group.\n       */\n      _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n        var self2 = this;\n        var vol = from;\n        var diff = to - from;\n        var steps = Math.abs(diff / 0.01);\n        var stepLen = Math.max(4, steps > 0 ? len / steps : len);\n        var lastTick = Date.now();\n        sound._fadeTo = to;\n        sound._interval = setInterval(function() {\n          var tick = (Date.now() - lastTick) / len;\n          lastTick = Date.now();\n          vol += diff * tick;\n          vol = Math.round(vol * 100) / 100;\n          if (diff < 0) {\n            vol = Math.max(to, vol);\n          } else {\n            vol = Math.min(to, vol);\n          }\n          if (self2._webAudio) {\n            sound._volume = vol;\n          } else {\n            self2.volume(vol, sound._id, true);\n          }\n          if (isGroup) {\n            self2._volume = vol;\n          }\n          if (to < from && vol <= to || to > from && vol >= to) {\n            clearInterval(sound._interval);\n            sound._interval = null;\n            sound._fadeTo = null;\n            self2.volume(to, sound._id);\n            self2._emit(\"fade\", sound._id);\n          }\n        }, stepLen);\n      },\n      /**\n       * Internal method that stops the currently playing fade when\n       * a new fade starts, volume is changed or the sound is stopped.\n       * @param  {Number} id The sound id.\n       * @return {Howl}\n       */\n      _stopFade: function(id) {\n        var self2 = this;\n        var sound = self2._soundById(id);\n        if (sound && sound._interval) {\n          if (self2._webAudio) {\n            sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n          }\n          clearInterval(sound._interval);\n          sound._interval = null;\n          self2.volume(sound._fadeTo, id);\n          sound._fadeTo = null;\n          self2._emit(\"fade\", id);\n        }\n        return self2;\n      },\n      /**\n       * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n       *   loop() -> Returns the group's loop value.\n       *   loop(id) -> Returns the sound id's loop value.\n       *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n       *   loop(loop, id) -> Sets the loop value of passed sound id.\n       * @return {Howl/Boolean} Returns self or current loop value.\n       */\n      loop: function() {\n        var self2 = this;\n        var args = arguments;\n        var loop, id, sound;\n        if (args.length === 0) {\n          return self2._loop;\n        } else if (args.length === 1) {\n          if (typeof args[0] === \"boolean\") {\n            loop = args[0];\n            self2._loop = loop;\n          } else {\n            sound = self2._soundById(parseInt(args[0], 10));\n            return sound ? sound._loop : false;\n          }\n        } else if (args.length === 2) {\n          loop = args[0];\n          id = parseInt(args[1], 10);\n        }\n        var ids = self2._getSoundIds(id);\n        for (var i = 0; i < ids.length; i++) {\n          sound = self2._soundById(ids[i]);\n          if (sound) {\n            sound._loop = loop;\n            if (self2._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.loop = loop;\n              if (loop) {\n                sound._node.bufferSource.loopStart = sound._start || 0;\n                sound._node.bufferSource.loopEnd = sound._stop;\n                if (self2.playing(ids[i])) {\n                  self2.pause(ids[i], true);\n                  self2.play(ids[i], true);\n                }\n              }\n            }\n          }\n        }\n        return self2;\n      },\n      /**\n       * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n       *   rate() -> Returns the first sound node's current playback rate.\n       *   rate(id) -> Returns the sound id's current playback rate.\n       *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n       *   rate(rate, id) -> Sets the playback rate of passed sound id.\n       * @return {Howl/Number} Returns self or the current playback rate.\n       */\n      rate: function() {\n        var self2 = this;\n        var args = arguments;\n        var rate, id;\n        if (args.length === 0) {\n          id = self2._sounds[0]._id;\n        } else if (args.length === 1) {\n          var ids = self2._getSoundIds();\n          var index = ids.indexOf(args[0]);\n          if (index >= 0) {\n            id = parseInt(args[0], 10);\n          } else {\n            rate = parseFloat(args[0]);\n          }\n        } else if (args.length === 2) {\n          rate = parseFloat(args[0]);\n          id = parseInt(args[1], 10);\n        }\n        var sound;\n        if (typeof rate === \"number\") {\n          if (self2._state !== \"loaded\" || self2._playLock) {\n            self2._queue.push({\n              event: \"rate\",\n              action: function() {\n                self2.rate.apply(self2, args);\n              }\n            });\n            return self2;\n          }\n          if (typeof id === \"undefined\") {\n            self2._rate = rate;\n          }\n          id = self2._getSoundIds(id);\n          for (var i = 0; i < id.length; i++) {\n            sound = self2._soundById(id[i]);\n            if (sound) {\n              if (self2.playing(id[i])) {\n                sound._rateSeek = self2.seek(id[i]);\n                sound._playStart = self2._webAudio ? Howler.ctx.currentTime : sound._playStart;\n              }\n              sound._rate = rate;\n              if (self2._webAudio && sound._node && sound._node.bufferSource) {\n                sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n              } else if (sound._node) {\n                sound._node.playbackRate = rate;\n              }\n              var seek = self2.seek(id[i]);\n              var duration = (self2._sprite[sound._sprite][0] + self2._sprite[sound._sprite][1]) / 1e3 - seek;\n              var timeout = duration * 1e3 / Math.abs(sound._rate);\n              if (self2._endTimers[id[i]] || !sound._paused) {\n                self2._clearTimer(id[i]);\n                self2._endTimers[id[i]] = setTimeout(self2._ended.bind(self2, sound), timeout);\n              }\n              self2._emit(\"rate\", sound._id);\n            }\n          }\n        } else {\n          sound = self2._soundById(id);\n          return sound ? sound._rate : self2._rate;\n        }\n        return self2;\n      },\n      /**\n       * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n       *   seek() -> Returns the first sound node's current seek position.\n       *   seek(id) -> Returns the sound id's current seek position.\n       *   seek(seek) -> Sets the seek position of the first sound node.\n       *   seek(seek, id) -> Sets the seek position of passed sound id.\n       * @return {Howl/Number} Returns self or the current seek position.\n       */\n      seek: function() {\n        var self2 = this;\n        var args = arguments;\n        var seek, id;\n        if (args.length === 0) {\n          if (self2._sounds.length) {\n            id = self2._sounds[0]._id;\n          }\n        } else if (args.length === 1) {\n          var ids = self2._getSoundIds();\n          var index = ids.indexOf(args[0]);\n          if (index >= 0) {\n            id = parseInt(args[0], 10);\n          } else if (self2._sounds.length) {\n            id = self2._sounds[0]._id;\n            seek = parseFloat(args[0]);\n          }\n        } else if (args.length === 2) {\n          seek = parseFloat(args[0]);\n          id = parseInt(args[1], 10);\n        }\n        if (typeof id === \"undefined\") {\n          return 0;\n        }\n        if (typeof seek === \"number\" && (self2._state !== \"loaded\" || self2._playLock)) {\n          self2._queue.push({\n            event: \"seek\",\n            action: function() {\n              self2.seek.apply(self2, args);\n            }\n          });\n          return self2;\n        }\n        var sound = self2._soundById(id);\n        if (sound) {\n          if (typeof seek === \"number\" && seek >= 0) {\n            var playing = self2.playing(id);\n            if (playing) {\n              self2.pause(id, true);\n            }\n            sound._seek = seek;\n            sound._ended = false;\n            self2._clearTimer(id);\n            if (!self2._webAudio && sound._node && !isNaN(sound._node.duration)) {\n              sound._node.currentTime = seek;\n            }\n            var seekAndEmit = function() {\n              if (playing) {\n                self2.play(id, true);\n              }\n              self2._emit(\"seek\", id);\n            };\n            if (playing && !self2._webAudio) {\n              var emitSeek = function() {\n                if (!self2._playLock) {\n                  seekAndEmit();\n                } else {\n                  setTimeout(emitSeek, 0);\n                }\n              };\n              setTimeout(emitSeek, 0);\n            } else {\n              seekAndEmit();\n            }\n          } else {\n            if (self2._webAudio) {\n              var realTime = self2.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n              var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n              return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n            } else {\n              return sound._node.currentTime;\n            }\n          }\n        }\n        return self2;\n      },\n      /**\n       * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n       * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n       * @return {Boolean} True if playing and false if not.\n       */\n      playing: function(id) {\n        var self2 = this;\n        if (typeof id === \"number\") {\n          var sound = self2._soundById(id);\n          return sound ? !sound._paused : false;\n        }\n        for (var i = 0; i < self2._sounds.length; i++) {\n          if (!self2._sounds[i]._paused) {\n            return true;\n          }\n        }\n        return false;\n      },\n      /**\n       * Get the duration of this sound. Passing a sound id will return the sprite duration.\n       * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n       * @return {Number} Audio duration in seconds.\n       */\n      duration: function(id) {\n        var self2 = this;\n        var duration = self2._duration;\n        var sound = self2._soundById(id);\n        if (sound) {\n          duration = self2._sprite[sound._sprite][1] / 1e3;\n        }\n        return duration;\n      },\n      /**\n       * Returns the current loaded state of this Howl.\n       * @return {String} 'unloaded', 'loading', 'loaded'\n       */\n      state: function() {\n        return this._state;\n      },\n      /**\n       * Unload and destroy the current Howl object.\n       * This will immediately stop all sound instances attached to this group.\n       */\n      unload: function() {\n        var self2 = this;\n        var sounds = self2._sounds;\n        for (var i = 0; i < sounds.length; i++) {\n          if (!sounds[i]._paused) {\n            self2.stop(sounds[i]._id);\n          }\n          if (!self2._webAudio) {\n            self2._clearSound(sounds[i]._node);\n            sounds[i]._node.removeEventListener(\"error\", sounds[i]._errorFn, false);\n            sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n            sounds[i]._node.removeEventListener(\"ended\", sounds[i]._endFn, false);\n            Howler._releaseHtml5Audio(sounds[i]._node);\n          }\n          delete sounds[i]._node;\n          self2._clearTimer(sounds[i]._id);\n        }\n        var index = Howler._howls.indexOf(self2);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n        var remCache = true;\n        for (i = 0; i < Howler._howls.length; i++) {\n          if (Howler._howls[i]._src === self2._src || self2._src.indexOf(Howler._howls[i]._src) >= 0) {\n            remCache = false;\n            break;\n          }\n        }\n        if (cache && remCache) {\n          delete cache[self2._src];\n        }\n        Howler.noAudio = false;\n        self2._state = \"unloaded\";\n        self2._sounds = [];\n        self2 = null;\n        return null;\n      },\n      /**\n       * Listen to a custom event.\n       * @param  {String}   event Event name.\n       * @param  {Function} fn    Listener to call.\n       * @param  {Number}   id    (optional) Only listen to events for this sound.\n       * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n       * @return {Howl}\n       */\n      on: function(event, fn, id, once) {\n        var self2 = this;\n        var events = self2[\"_on\" + event];\n        if (typeof fn === \"function\") {\n          events.push(once ? { id, fn, once } : { id, fn });\n        }\n        return self2;\n      },\n      /**\n       * Remove a custom event. Call without parameters to remove all events.\n       * @param  {String}   event Event name.\n       * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n       * @param  {Number}   id    (optional) Only remove events for this sound.\n       * @return {Howl}\n       */\n      off: function(event, fn, id) {\n        var self2 = this;\n        var events = self2[\"_on\" + event];\n        var i = 0;\n        if (typeof fn === \"number\") {\n          id = fn;\n          fn = null;\n        }\n        if (fn || id) {\n          for (i = 0; i < events.length; i++) {\n            var isId = id === events[i].id;\n            if (fn === events[i].fn && isId || !fn && isId) {\n              events.splice(i, 1);\n              break;\n            }\n          }\n        } else if (event) {\n          self2[\"_on\" + event] = [];\n        } else {\n          var keys = Object.keys(self2);\n          for (i = 0; i < keys.length; i++) {\n            if (keys[i].indexOf(\"_on\") === 0 && Array.isArray(self2[keys[i]])) {\n              self2[keys[i]] = [];\n            }\n          }\n        }\n        return self2;\n      },\n      /**\n       * Listen to a custom event and remove it once fired.\n       * @param  {String}   event Event name.\n       * @param  {Function} fn    Listener to call.\n       * @param  {Number}   id    (optional) Only listen to events for this sound.\n       * @return {Howl}\n       */\n      once: function(event, fn, id) {\n        var self2 = this;\n        self2.on(event, fn, id, 1);\n        return self2;\n      },\n      /**\n       * Emit all events of a specific type and pass the sound id.\n       * @param  {String} event Event name.\n       * @param  {Number} id    Sound ID.\n       * @param  {Number} msg   Message to go with event.\n       * @return {Howl}\n       */\n      _emit: function(event, id, msg) {\n        var self2 = this;\n        var events = self2[\"_on\" + event];\n        for (var i = events.length - 1; i >= 0; i--) {\n          if (!events[i].id || events[i].id === id || event === \"load\") {\n            setTimeout((function(fn) {\n              fn.call(this, id, msg);\n            }).bind(self2, events[i].fn), 0);\n            if (events[i].once) {\n              self2.off(event, events[i].fn, events[i].id);\n            }\n          }\n        }\n        self2._loadQueue(event);\n        return self2;\n      },\n      /**\n       * Queue of actions initiated before the sound has loaded.\n       * These will be called in sequence, with the next only firing\n       * after the previous has finished executing (even if async like play).\n       * @return {Howl}\n       */\n      _loadQueue: function(event) {\n        var self2 = this;\n        if (self2._queue.length > 0) {\n          var task = self2._queue[0];\n          if (task.event === event) {\n            self2._queue.shift();\n            self2._loadQueue();\n          }\n          if (!event) {\n            task.action();\n          }\n        }\n        return self2;\n      },\n      /**\n       * Fired when playback ends at the end of the duration.\n       * @param  {Sound} sound The sound object to work with.\n       * @return {Howl}\n       */\n      _ended: function(sound) {\n        var self2 = this;\n        var sprite = sound._sprite;\n        if (!self2._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n          setTimeout(self2._ended.bind(self2, sound), 100);\n          return self2;\n        }\n        var loop = !!(sound._loop || self2._sprite[sprite][2]);\n        self2._emit(\"end\", sound._id);\n        if (!self2._webAudio && loop) {\n          self2.stop(sound._id, true).play(sound._id);\n        }\n        if (self2._webAudio && loop) {\n          self2._emit(\"play\", sound._id);\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._playStart = Howler.ctx.currentTime;\n          var timeout = (sound._stop - sound._start) * 1e3 / Math.abs(sound._rate);\n          self2._endTimers[sound._id] = setTimeout(self2._ended.bind(self2, sound), timeout);\n        }\n        if (self2._webAudio && !loop) {\n          sound._paused = true;\n          sound._ended = true;\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          self2._clearTimer(sound._id);\n          self2._cleanBuffer(sound._node);\n          Howler._autoSuspend();\n        }\n        if (!self2._webAudio && !loop) {\n          self2.stop(sound._id, true);\n        }\n        return self2;\n      },\n      /**\n       * Clear the end timer for a sound playback.\n       * @param  {Number} id The sound ID.\n       * @return {Howl}\n       */\n      _clearTimer: function(id) {\n        var self2 = this;\n        if (self2._endTimers[id]) {\n          if (typeof self2._endTimers[id] !== \"function\") {\n            clearTimeout(self2._endTimers[id]);\n          } else {\n            var sound = self2._soundById(id);\n            if (sound && sound._node) {\n              sound._node.removeEventListener(\"ended\", self2._endTimers[id], false);\n            }\n          }\n          delete self2._endTimers[id];\n        }\n        return self2;\n      },\n      /**\n       * Return the sound identified by this ID, or return null.\n       * @param  {Number} id Sound ID\n       * @return {Object}    Sound object or null.\n       */\n      _soundById: function(id) {\n        var self2 = this;\n        for (var i = 0; i < self2._sounds.length; i++) {\n          if (id === self2._sounds[i]._id) {\n            return self2._sounds[i];\n          }\n        }\n        return null;\n      },\n      /**\n       * Return an inactive sound from the pool or create a new one.\n       * @return {Sound} Sound playback object.\n       */\n      _inactiveSound: function() {\n        var self2 = this;\n        self2._drain();\n        for (var i = 0; i < self2._sounds.length; i++) {\n          if (self2._sounds[i]._ended) {\n            return self2._sounds[i].reset();\n          }\n        }\n        return new Sound(self2);\n      },\n      /**\n       * Drain excess inactive sounds from the pool.\n       */\n      _drain: function() {\n        var self2 = this;\n        var limit = self2._pool;\n        var cnt = 0;\n        var i = 0;\n        if (self2._sounds.length < limit) {\n          return;\n        }\n        for (i = 0; i < self2._sounds.length; i++) {\n          if (self2._sounds[i]._ended) {\n            cnt++;\n          }\n        }\n        for (i = self2._sounds.length - 1; i >= 0; i--) {\n          if (cnt <= limit) {\n            return;\n          }\n          if (self2._sounds[i]._ended) {\n            if (self2._webAudio && self2._sounds[i]._node) {\n              self2._sounds[i]._node.disconnect(0);\n            }\n            self2._sounds.splice(i, 1);\n            cnt--;\n          }\n        }\n      },\n      /**\n       * Get all ID's from the sounds pool.\n       * @param  {Number} id Only return one ID if one is passed.\n       * @return {Array}    Array of IDs.\n       */\n      _getSoundIds: function(id) {\n        var self2 = this;\n        if (typeof id === \"undefined\") {\n          var ids = [];\n          for (var i = 0; i < self2._sounds.length; i++) {\n            ids.push(self2._sounds[i]._id);\n          }\n          return ids;\n        } else {\n          return [id];\n        }\n      },\n      /**\n       * Load the sound back into the buffer source.\n       * @param  {Sound} sound The sound object to work with.\n       * @return {Howl}\n       */\n      _refreshBuffer: function(sound) {\n        var self2 = this;\n        sound._node.bufferSource = Howler.ctx.createBufferSource();\n        sound._node.bufferSource.buffer = cache[self2._src];\n        if (sound._panner) {\n          sound._node.bufferSource.connect(sound._panner);\n        } else {\n          sound._node.bufferSource.connect(sound._node);\n        }\n        sound._node.bufferSource.loop = sound._loop;\n        if (sound._loop) {\n          sound._node.bufferSource.loopStart = sound._start || 0;\n          sound._node.bufferSource.loopEnd = sound._stop || 0;\n        }\n        sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n        return self2;\n      },\n      /**\n       * Prevent memory leaks by cleaning up the buffer source after playback.\n       * @param  {Object} node Sound's audio node containing the buffer source.\n       * @return {Howl}\n       */\n      _cleanBuffer: function(node) {\n        var self2 = this;\n        var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf(\"Apple\") >= 0;\n        if (Howler._scratchBuffer && node.bufferSource) {\n          node.bufferSource.onended = null;\n          node.bufferSource.disconnect(0);\n          if (isIOS) {\n            try {\n              node.bufferSource.buffer = Howler._scratchBuffer;\n            } catch (e) {\n            }\n          }\n        }\n        node.bufferSource = null;\n        return self2;\n      },\n      /**\n       * Set the source to a 0-second silence to stop any downloading (except in IE).\n       * @param  {Object} node Audio node to clear.\n       */\n      _clearSound: function(node) {\n        var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n        if (!checkIE) {\n          node.src = \"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA\";\n        }\n      }\n    };\n    var Sound = function(howl) {\n      this._parent = howl;\n      this.init();\n    };\n    Sound.prototype = {\n      /**\n       * Initialize a new Sound object.\n       * @return {Sound}\n       */\n      init: function() {\n        var self2 = this;\n        var parent = self2._parent;\n        self2._muted = parent._muted;\n        self2._loop = parent._loop;\n        self2._volume = parent._volume;\n        self2._rate = parent._rate;\n        self2._seek = 0;\n        self2._paused = true;\n        self2._ended = true;\n        self2._sprite = \"__default\";\n        self2._id = ++Howler._counter;\n        parent._sounds.push(self2);\n        self2.create();\n        return self2;\n      },\n      /**\n       * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n       * @return {Sound}\n       */\n      create: function() {\n        var self2 = this;\n        var parent = self2._parent;\n        var volume = Howler._muted || self2._muted || self2._parent._muted ? 0 : self2._volume;\n        if (parent._webAudio) {\n          self2._node = typeof Howler.ctx.createGain === \"undefined\" ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n          self2._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n          self2._node.paused = true;\n          self2._node.connect(Howler.masterGain);\n        } else if (!Howler.noAudio) {\n          self2._node = Howler._obtainHtml5Audio();\n          self2._errorFn = self2._errorListener.bind(self2);\n          self2._node.addEventListener(\"error\", self2._errorFn, false);\n          self2._loadFn = self2._loadListener.bind(self2);\n          self2._node.addEventListener(Howler._canPlayEvent, self2._loadFn, false);\n          self2._endFn = self2._endListener.bind(self2);\n          self2._node.addEventListener(\"ended\", self2._endFn, false);\n          self2._node.src = parent._src;\n          self2._node.preload = parent._preload === true ? \"auto\" : parent._preload;\n          self2._node.volume = volume * Howler.volume();\n          self2._node.load();\n        }\n        return self2;\n      },\n      /**\n       * Reset the parameters of this sound to the original state (for recycle).\n       * @return {Sound}\n       */\n      reset: function() {\n        var self2 = this;\n        var parent = self2._parent;\n        self2._muted = parent._muted;\n        self2._loop = parent._loop;\n        self2._volume = parent._volume;\n        self2._rate = parent._rate;\n        self2._seek = 0;\n        self2._rateSeek = 0;\n        self2._paused = true;\n        self2._ended = true;\n        self2._sprite = \"__default\";\n        self2._id = ++Howler._counter;\n        return self2;\n      },\n      /**\n       * HTML5 Audio error listener callback.\n       */\n      _errorListener: function() {\n        var self2 = this;\n        self2._parent._emit(\"loaderror\", self2._id, self2._node.error ? self2._node.error.code : 0);\n        self2._node.removeEventListener(\"error\", self2._errorFn, false);\n      },\n      /**\n       * HTML5 Audio canplaythrough listener callback.\n       */\n      _loadListener: function() {\n        var self2 = this;\n        var parent = self2._parent;\n        parent._duration = Math.ceil(self2._node.duration * 10) / 10;\n        if (Object.keys(parent._sprite).length === 0) {\n          parent._sprite = { __default: [0, parent._duration * 1e3] };\n        }\n        if (parent._state !== \"loaded\") {\n          parent._state = \"loaded\";\n          parent._emit(\"load\");\n          parent._loadQueue();\n        }\n        self2._node.removeEventListener(Howler._canPlayEvent, self2._loadFn, false);\n      },\n      /**\n       * HTML5 Audio ended listener callback.\n       */\n      _endListener: function() {\n        var self2 = this;\n        var parent = self2._parent;\n        if (parent._duration === Infinity) {\n          parent._duration = Math.ceil(self2._node.duration * 10) / 10;\n          if (parent._sprite.__default[1] === Infinity) {\n            parent._sprite.__default[1] = parent._duration * 1e3;\n          }\n          parent._ended(self2);\n        }\n        self2._node.removeEventListener(\"ended\", self2._endFn, false);\n      }\n    };\n    var cache = {};\n    var loadBuffer = function(self2) {\n      var url = self2._src;\n      if (cache[url]) {\n        self2._duration = cache[url].duration;\n        loadSound(self2);\n        return;\n      }\n      if (/^data:[^;]+;base64,/.test(url)) {\n        var data = atob(url.split(\",\")[1]);\n        var dataView = new Uint8Array(data.length);\n        for (var i = 0; i < data.length; ++i) {\n          dataView[i] = data.charCodeAt(i);\n        }\n        decodeAudioData(dataView.buffer, self2);\n      } else {\n        var xhr = new XMLHttpRequest();\n        xhr.open(self2._xhr.method, url, true);\n        xhr.withCredentials = self2._xhr.withCredentials;\n        xhr.responseType = \"arraybuffer\";\n        if (self2._xhr.headers) {\n          Object.keys(self2._xhr.headers).forEach(function(key) {\n            xhr.setRequestHeader(key, self2._xhr.headers[key]);\n          });\n        }\n        xhr.onload = function() {\n          var code = (xhr.status + \"\")[0];\n          if (code !== \"0\" && code !== \"2\" && code !== \"3\") {\n            self2._emit(\"loaderror\", null, \"Failed loading audio file with status: \" + xhr.status + \".\");\n            return;\n          }\n          decodeAudioData(xhr.response, self2);\n        };\n        xhr.onerror = function() {\n          if (self2._webAudio) {\n            self2._html5 = true;\n            self2._webAudio = false;\n            self2._sounds = [];\n            delete cache[url];\n            self2.load();\n          }\n        };\n        safeXhrSend(xhr);\n      }\n    };\n    var safeXhrSend = function(xhr) {\n      try {\n        xhr.send();\n      } catch (e) {\n        xhr.onerror();\n      }\n    };\n    var decodeAudioData = function(arraybuffer, self2) {\n      var error = function() {\n        self2._emit(\"loaderror\", null, \"Decoding audio data failed.\");\n      };\n      var success = function(buffer) {\n        if (buffer && self2._sounds.length > 0) {\n          cache[self2._src] = buffer;\n          loadSound(self2, buffer);\n        } else {\n          error();\n        }\n      };\n      if (typeof Promise !== \"undefined\" && Howler.ctx.decodeAudioData.length === 1) {\n        Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n      } else {\n        Howler.ctx.decodeAudioData(arraybuffer, success, error);\n      }\n    };\n    var loadSound = function(self2, buffer) {\n      if (buffer && !self2._duration) {\n        self2._duration = buffer.duration;\n      }\n      if (Object.keys(self2._sprite).length === 0) {\n        self2._sprite = { __default: [0, self2._duration * 1e3] };\n      }\n      if (self2._state !== \"loaded\") {\n        self2._state = \"loaded\";\n        self2._emit(\"load\");\n        self2._loadQueue();\n      }\n    };\n    var setupAudioContext = function() {\n      if (!Howler.usingWebAudio) {\n        return;\n      }\n      try {\n        if (typeof AudioContext !== \"undefined\") {\n          Howler.ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== \"undefined\") {\n          Howler.ctx = new webkitAudioContext();\n        } else {\n          Howler.usingWebAudio = false;\n        }\n      } catch (e) {\n        Howler.usingWebAudio = false;\n      }\n      if (!Howler.ctx) {\n        Howler.usingWebAudio = false;\n      }\n      var iOS = /iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform);\n      var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n      var version = appVersion ? parseInt(appVersion[1], 10) : null;\n      if (iOS && version && version < 9) {\n        var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n        if (Howler._navigator && !safari) {\n          Howler.usingWebAudio = false;\n        }\n      }\n      if (Howler.usingWebAudio) {\n        Howler.masterGain = typeof Howler.ctx.createGain === \"undefined\" ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n        Howler.masterGain.connect(Howler.ctx.destination);\n      }\n      Howler._setup();\n    };\n    {\n      exports.Howler = Howler;\n      exports.Howl = Howl;\n    }\n    if (typeof commonjsGlobal !== \"undefined\") {\n      commonjsGlobal.HowlerGlobal = HowlerGlobal;\n      commonjsGlobal.Howler = Howler;\n      commonjsGlobal.Howl = Howl;\n      commonjsGlobal.Sound = Sound;\n    } else if (typeof window !== \"undefined\") {\n      window.HowlerGlobal = HowlerGlobal;\n      window.Howler = Howler;\n      window.Howl = Howl;\n      window.Sound = Sound;\n    }\n  })();\n})(howler_core$1);\nconst howler_core = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null\n}, [howler_core$1]);\nexport {\n  howler_core as h\n};\n"],
  "mappings": "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",
  "names": []
}
